#!/usr/bin/env bash

# Support running scripts on macOS. If these scripts are refactored, consider
# rewriting the sed commands in perl to avoid this check.
SED=sed
if [[ $(uname) != "Linux" ]]; then
    if ! hash gsed > /dev/null; then
        echo "GNU sed is required on macOS and BSD. On macOS, install it with brew install coreutils."
        exit 1
    fi
    SED=gsed
fi

function getTags() {
    TEMP=$(mktemp -d)
    FILTER=$1

    # Get the official image config, split them into separate temp files
    SOURCE="${SOURCE:-https://raw.githubusercontent.com/docker-library/official-images/master/library/${NAME}}"
    curl --silent --location --fail --retry 3 "${SOURCE}" | \
        awk -v TEMP="$TEMP" -v RS= '{ print > (TEMP"/image" ++CNT) }'

    # Parse each image definition individually.
    for IMAGE in `ls "${TEMP}"`; do
        cat "${TEMP}/${IMAGE}" | \
            grep '^Tags\|^SharedTags' | \
            $SED -z 's/\nSharedTags:/,/g' | \
            sort | \
            $SED 's/^.*Tags: //g' | \
            grep -v -e alpine -e slim -e onbuild -e windows -e wheezy -e nanoserver -e alpha -e beta | \
            ${FILTER} | \
            $SED 's/, /,/g'
    done

    # Clean up
    rm -rf "${TEMP}"
}

DIR="services/$1"

if [ -e "${DIR}/manifest" ]; then
    source "${DIR}/manifest"
fi

NAME=${NAME:-$1}
FROM=${FROM:-$NAME}
SERVICE=${SERVICE:-$NAME}
FILTER=${FILTER:-cat}
TEMPLATE=${TEMPLATE:-apt}
GETTAGS=${GETTAGS:-getTags}

SERVICEDIR="images/${SERVICE}"
mkdir -p "${SERVICEDIR}"

for TAGS in $($GETTAGS "${FILTER}"); do
    TAG=$(echo "${TAGS}" | cut -d, -f1)
    IMGDIR="${SERVICEDIR}/${TAG}"
    IMAGE="${FROM}:${TAG}"

    mkdir -p "${IMGDIR}"

    RUN=""
    if [ -e "${DIR}/run" ]; then
        cp "${DIR}/run" "${IMGDIR}/run"
        chmod 755 "${IMGDIR}/run"
        RUN="RUN mkdir -p /etc/service/${SERVICE}\nCOPY run /etc/service/${SERVICE}/run"
    fi

    DOCKERFILE=/dev/null
    if [ -e "${DIR}/Dockerfile" ]; then
        DOCKERFILE="${DIR}/Dockerfile"
    fi

    cp -r "${DIR}/../../share" "${IMGDIR}/"
    if [ -e "${DIR}/files" ]; then
        cp -r "${DIR}/files" "${IMGDIR}/"
    fi

    cat Dockerfile.${TEMPLATE}.template | \
        $SED "s|{{FROM}}|${IMAGE}|g" | \
        $SED "/{{DOCKERFILE}}/ r ${DOCKERFILE}" | \
        $SED "/{{DOCKERFILE}}/d" | \
        $SED "s|{{RUN}}|${RUN}|g" \
        > "${IMGDIR}/Dockerfile"

    echo "${TAGS}" | tr ',' ' ' > "${IMGDIR}/TAGS"
    echo "${NAME}" > "${IMGDIR}/NAME"
done

echo "Dockerfiles generated."
