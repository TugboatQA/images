#!/usr/bin/env bash

# This generates an image that does not have an official Docker image to
# inherit from.

DIR="services/$1"

# The manifest is expected to implement a getTags() function that returns a
# dist,version list such as "cosmic,5" to indicate Ubuntu Cosmic ships with
# version 5.x of the service.
if [ -e "${DIR}/manifest" ]; then
    source "${DIR}/manifest"
fi

NAME=${NAME:-$1}
FROM=ubuntu
SERVICE=${SERVICE:-$NAME}
FILTER=${FILTER:-cat}
PACKAGES=${PACKAGES:-apt}
GETTAGS=${GETTAGS:-getTags}

SERVICEDIR="images/${SERVICE}"
mkdir -p "${SERVICEDIR}"

for TAGS in $($GETTAGS "${FILTER}"); do
    DIST=$(echo "${TAGS}" | cut -d, -f1)
    TAG=$(echo "${TAGS}" | cut -d, -f2)
    IMGDIR="${SERVICEDIR}/${TAG}"
    IMAGE="${FROM}:${DIST}"

    mkdir -p "${IMGDIR}"

    RUN=""
    if [ -e "${DIR}/run" ]; then
        cp "${DIR}/run" "${IMGDIR}/run"
        chmod 755 "${IMGDIR}/run"
        RUN="RUN mkdir -p /etc/service/${SERVICE}\nCOPY run /etc/service/${SERVICE}/run"
    fi

    DOCKERFILE=/dev/null
    if [ -e "${DIR}/Dockerfile" ]; then
        DOCKERFILE="${DIR}/Dockerfile"
    fi

    cp -r "${DIR}/../../share" "${IMGDIR}/"
    if [ -e "${DIR}/files" ]; then
        cp -r "${DIR}/files" "${IMGDIR}/"
    fi

    cat Dockerfile.${PACKAGES}.template | \
        sed "s|{{FROM}}|${IMAGE}|g" | \
        sed "/{{DOCKERFILE}}/ r ${DOCKERFILE}" | \
        sed "/{{DOCKERFILE}}/d" | \
        sed "s|{{RUN}}|${RUN}|g" \
        > "${IMGDIR}/Dockerfile"

    echo "${TAGS}" | tr ',' ' ' > "${IMGDIR}/TAGS"
    echo "${NAME}" > "${IMGDIR}/NAME"
done
